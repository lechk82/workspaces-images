ARG BASE_TAG="develop"
ARG BASE_IMAGE="core-debian-bookworm"
FROM kasmweb/$BASE_IMAGE:$BASE_TAG

USER root

ENV HOME /home/kasm-default-profile
ENV STARTUPDIR /dockerstartup
WORKDIR $HOME

### Envrionment config
ENV DEBIAN_FRONTEND=noninteractive \
    SKIP_CLEAN=true \
    KASM_RX_HOME=$STARTUPDIR/kasmrx \
    DONT_PROMPT_WSL_INSTALL="No_Prompt_please" \
    INST_DIR=$STARTUPDIR/install \
    INST_SCRIPTS="/ubuntu/install/tools/install_tools_deluxe.sh \
                  /ubuntu/install/misc/install_tools.sh \
                  /ubuntu/install/chrome/install_chrome.sh \
                  #/ubuntu/install/chromium/install_chromium.sh \
                  #/ubuntu/install/firefox/install_firefox.sh \
                  #/ubuntu/install/sublime_text/install_sublime_text.sh \
                  /ubuntu/install/vs_code/install_vs_code.sh \
                  #/ubuntu/install/remmina/install_remmina.sh \
                  #/ubuntu/install/only_office/install_only_office.sh \
                  #/ubuntu/install/signal/install_signal.sh \
                  #/ubuntu/install/gimp/install_gimp.sh \
                  #/ubuntu/install/zoom/install_zoom.sh \
                  #/ubuntu/install/obs/install_obs.sh \
                  #/ubuntu/install/ansible/install_ansible.sh \
                  #/ubuntu/install/terraform/install_terraform.sh \
                  #/ubuntu/install/telegram/install_telegram.sh \
                  #/ubuntu/install/thunderbird/install_thunderbird.sh \
                  #/ubuntu/install/gamepad_utils/install_gamepad_utils.sh \
                  /ubuntu/install/cleanup/cleanup.sh"

# Copy install scripts
COPY ./src/ $INST_DIR

# Run installations
RUN \
  for SCRIPT in $INST_SCRIPTS; do \
    bash ${INST_DIR}${SCRIPT}; \
  done && \
  $STARTUPDIR/set_user_permission.sh $HOME && \
  rm -f /etc/X11/xinit/Xclients && \
  chown 1000:0 $HOME && \
  mkdir -p /home/kasm-user && \
  chown -R 1000:0 /home/kasm-user && \
  rm -Rf ${INST_DIR}

RUN apt-get update && apt-get upgrade -y && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    htop nano && \
  rm -rf /var/lib/apt/lists/*

RUN \
  cd /tmp && \
  wget https://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz && \
  zcat < install-tl-unx.tar.gz | tar xf - && \
  cd install-tl-* && \
  perl ./install-tl --no-interaction

RUN \
  echo "main_memory=12000000" >> /usr/local/texlive/2023/texmf.cnf && \
  echo "extra_mem_bot=40000000" >> /usr/local/texlive/2023/texmf.cnf && \
  echo "extra_mem_top=40000000" >> /usr/local/texlive/2023/texmf.cnf && \
  echo "font_mem_size=40000000" >> /usr/local/texlive/2023/texmf.cnf && \
  echo "pool_size=40000000" >> /usr/local/texlive/2023/texmf.cnf && \
  echo "buf_size=40000000" >> /usr/local/texlive/2023/texmf.cnf && \
  echo "main_memory.context = 4000000" >> /usr/local/texlive/2023/texmf.cnf && \
  echo "extra_mem_bot.context = 16000000" >> /usr/local/texlive/2023/texmf.cnf && \
  echo "save_size  = 100000" >> /usr/local/texlive/2023/texmf.cnf && \
  /usr/local/texlive/2023/bin/x86_64-linux/fmtutil-sys --all

RUN echo "export PATH=$PATH:/usr/local/texlive/2023/bin/x86_64-linux" >> /etc/profile

# Userspace Runtime
ENV HOME /home/kasm-user
WORKDIR $HOME
USER 1000

CMD ["--tail-log"]
